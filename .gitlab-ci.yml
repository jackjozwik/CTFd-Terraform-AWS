stages:
  - validate
  - plan
  - apply

variables:
  TF_VERSION: "1.6.6" # Specify your Terraform version
  AWS_DEFAULT_REGION: "us-east-1" # Your AWS region
  TF_ROOT: "${CI_PROJECT_DIR}" # Terraform root directory

before_script:
  - echo "Setting up AWS credentials..."
  - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - echo "AWS Access Key ID $AWS_ACCESS_KEY_ID"
  - echo "Setting up Terraform..."
  - apt-get update && apt-get install -y unzip
  - curl -L https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip > terraform.zip
  - unzip terraform.zip
  - mv terraform /usr/local/bin
  - rm terraform.zip
  - terraform --version
  - cd ${TF_ROOT}
  - echo "Initializing Terraform..."
  - terraform init
  - echo "Terraform initialized."

validate:
  stage: validate
  script:
    - echo "Running terraform validate..."
    - terraform validate

plan:
  stage: plan
  script:
    - echo "Running terraform plan..."
    - terraform plan -out=tfplan -var="access_key=${TF_VAR_access_key}" -var="secret_key=${TF_VAR_secret_key}" -var="region=${TF_VAR_region}" -var="certificate_arn=${TF_VAR_certificate_arn}"
  artifacts:
    paths:
      - tfplan
  only:
    - main # Change to your main branch name

apply:
  stage: apply
  script:
    - echo "Running terraform apply..."
    - terraform apply -input=false tfplan
    - echo "Terraform successfully applied!"
  when: manual
  only:
    - main # Change to your main branch name